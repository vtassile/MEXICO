)
View(MEXICO)
ggplot(aes(MEXICO$pop,MEXICO$afroamerican))
ggplot(aes(MEXICO$pop,MEXICO$afroamerican))
ggplot(aes(MEXICO$pop,MEXICO$afroamerican))+geom_point()
ggplot(aes(MEXICO$pop,MEXICO$afroamerican,data=MEXICO))+geom_point()
View(MAESTRO_6)
ggplot(aes(kilos,precio,data=MAESTRO_6))+geom_point()
View(MAESTRO_6)
ggplot(aes(KILOS,PRECIO,data=MAESTRO_6))+geom_point()
View(MEXICO_0)
str(MEXICO_0)
ggplot(aes(pop,afroamerican,data=MEXICO))+geom_point()
ggplot(aes(x=pop,y=afroamerican,data=MEXICO))+geom_point()
ggplot(aes(x="pop",y="afroamerican",data=MEXICO))+geom_point()
ggplot(aes(x="pop",y="afroamerican",data=MEXICO))+geom_line()
ggplot(aes(x="pop",y="afroamerican",data=MEXICO_0))+geom_line()
runApp()
MEXICO$value<-1
View(MEXICO)
runApp()
MEXICO_0<-df_mxstate
MEXICO_0$region<-as.integer(MEXICO_0$region)
MEXICO<-full_join(MEXICO_0,REGION_G)
MEXICO$region<-as.character(MEXICO$region)
MEXICO$value<-1
#df_mxstate$value <- df_mxstate$afromexican / df_mxstate$pop
PP<-mxstate_choropleth(MEXICO,
title = "Total population, by state")
PP
print(PP)
gplot
View(MEXICO)
qplot(pop,pop_male,data=MEXICO,geom=line)
qplot(pop,pop_male,data=MEXICO,geom="line")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
str(MAESTRO_4)
runApp()
runApp()
runApp()
unique(MAESTRO_4$ORIGEN)
runApp()
View(MAESTRO_4)
runApp()
View(REGION_G)
View(REGION_G)
runApp()
unique(REGION_G$Region_G)
unique(MAESTRO_4$REGION)
View(REGION_G)
REGION_G$value<-0
View(REGION_G)
save.image("~/Documentos/CARPETA VALENTIN/ASESORIAS/GIACINTI/2016/ANALYTICS/MEXICO ANALITIC/MEXICO/MEXICO.RData")
runApp()
runApp()
View(REGION_G)
library(readr)
REGION_G <- read_delim("~/Dropbox/ESTADISTICA/MEXICO/PROCESAMIENTO/REGION_G.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(REGION_G)
save.image("~/Documentos/CARPETA VALENTIN/ASESORIAS/GIACINTI/2016/ANALYTICS/MEXICO ANALITIC/MEXICO/MEXICO.RData")
runApp()
View(REGION_G)
REGION_G$Region_G<-as.factor(REGION_G$REGION)
View(REGION_G)
REGION_G$Region_G<-as.factor(REGION_G$Region_G)
View(REGION_G)
save.image("~/Documentos/CARPETA VALENTIN/ASESORIAS/GIACINTI/2016/ANALYTICS/MEXICO ANALITIC/MEXICO/MEXICO.RData")
runApp()
View(REGION_G)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(MAESTRO_4)
runApp()
runApp()
runApp()
runApp()
View(REGION_G)
library(readr)
REGION_G <- read_delim("~/Dropbox/ESTADISTICA/MEXICO/PROCESAMIENTO/REGION_G.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(REGION_G)
View(REGION_G)
runApp()
runApp()
runApp()
View(REGION_G)
View(MAESTRO_4)
runApp()
runApp()
runApp()
runApp()
ANOS<-2015
FILTRA<-filter(MAESTRO_4,ANO  %in% ANOS)
ORIGENES<-"I"
FILTRA<-filter(FILTRA,ORIGEN  %in% ORIGENES)
MESES<-6
FILTRA<-filter(FILTRA,MES  %in% MESES)
FILTRA$REGION<-as.factor(FILTRA$REGION)
TOTO<-FILTRA %>%
group_by(REGION) %>%
select(KILOS) %>%
summarise(
value = mean(KILOS, na.rm = TRUE))
View(TOTO)
str(TOTO)
TOTO1<-as.data.frame(TOTO)
REGION_G1<-as.data.frame(REGION_G)
TOTO2<-inner_join(TOTO1,REGION_G,by=c("REGION","Region_G"))
TOTO1$Region_G<-TOTO1$REGION
View(TOTO1)
TOTO2<-inner_join(TOTO1,REGION_G,by=c(Region_G"))
TOTO2<-inner_join(TOTO1,REGION_G,by=c(Region_G"))
TOTO2<-inner_join(TOTO1,REGION_G,by="Region_G")
TOTO1$Region_G<-as.factor(TOTO1$REGION)
REGION_G$REGION<-as.factor(REGION_G$REGION)
TOTO2<-inner_join(TOTO1,REGION_G,by="Region_G")
View(TOTO2)
str(TOTO1)
levels(TOTO1$Region_G)
levels(REGION_G$Region_G)
levels(REGION_G1$Region_G)
View(REGION_G1)
str(REGION_G1$Region_G)
REGION_G1$Region_G<-as.factor(REGION_G1$Region_G)
levels(REGION_G1$Region_G)
TOTO2<-inner_join(TOTO1,REGION_G,by="Region_G")
TOTO2<-inner_join(TOTO1,REGION_G1,by="Region_G")
TOTO2<-left_join(TOTO1,REGION_G1,by="Region_G")
levels(REGION_G1$Region_G)
levels(TOTO1$Region_G)
TOTO1$Region_G<-as.character(TOTO1$REGION)
REGION_G1$Region_G<-as.character(REGION_G1$Region_G)
TOTO2<-left_join(TOTO1,REGION_G1,by="Region_G")
View(TOTO2)
TOTO2<-inner_join(REGION_G1,TOTO1by="Region_G")
TOTO2<-inner_join(REGION_G1,TOTO1,by="Region_G")
View(TOTO2)
TOTO2<-left_join(REGION_G1,TOTO1,by="Region_G")
View(TOTO2)
View(REGION_G1)
View(TOTO1)
REGION_G1$value<-0
TOTO2<-left_join(REGION_G1,TOTO1,by="Region_G")
View(TOTO2)
TOTO1<-as.data.frame(TOTO)
REGION_G1<-as.data.frame(REGION_G)
TOTO1$Region_G<-as.character(TOTO1$REGION)
REGION_G1$Region_G<-as.character(REGION_G1$Region_G)
TOTO2<-left_join(REGION_G1,TOTO1,by="Region_G")
View(TOTO2)
View(TOTO2)
str(TOTO2)
str(df_mxstate)
TOTO2$region<-as.character(n_region)
TOTO2$region<-as.character(TOTO2$n_region)
str(TOTO2)
library(readr)
REGION_G <- read_delim("~/Dropbox/ESTADISTICA/MEXICO/PROCESAMIENTO/REGION_G.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(REGION_G)
ANOS<-2015
FILTRA<-filter(MAESTRO_4,ANO  %in% ANOS)
ORIGENES<-"I"
FILTRA<-filter(FILTRA,ORIGEN  %in% ORIGENES)
MESES<-6
FILTRA<-filter(FILTRA,MES  %in% MESES)
FILTRA$REGION<-as.factor(FILTRA$REGION)
TOTO<-FILTRA %>%
group_by(REGION) %>%
select(KILOS) %>%
summarise(
value = mean(KILOS, na.rm = TRUE))
TOTO1<-as.data.frame(TOTO)
REGION_G1<-as.data.frame(REGION_G)
TOTO1$Region_G<-as.character(TOTO1$REGION)
REGION_G1$Region_G<-as.character(REGION_G1$Region_G)
TOTO2<-left_join(REGION_G1,TOTO1,by="Region_G")
View(TOTO2)
TOTO2[,1]
TOTO2[1,]
TOTO2[,c(3:5)]
MEXICO_0<-df_mxstate
MEXICO<-full_join(MEXICO_0,TOTO3)
TOTO3<-TOTO2[,c(3:5)]
MEXICO_0<-df_mxstate
MEXICO<-full_join(MEXICO_0,TOTO3)
View(MEXICO)
runApp()
MEXICO$value2<-iff(MEXICO$value==NA,0,MEXICO$value)
MEXICO$value2<-iif(MEXICO$value==NA,0,MEXICO$value)
MEXICO$value2<-ifelse(MEXICO$value==NA,0,MEXICO$value)
View(MEXICO)
MEXICO$value[is.na(MEXICO$value)] <- 0
View(MEXICO)
runApp()
ANOS<-2015
FILTRA<-filter(MAESTRO_4,ANO  %in% ANOS)
ORIGENES<-"I"
FILTRA<-filter(FILTRA,ORIGEN  %in% ORIGENES)
MESES<-6
FILTRA<-filter(FILTRA,MES  %in% MESES)
FILTRA$REGION<-as.factor(FILTRA$REGION)
TOTO<-FILTRA %>%
group_by(REGION) %>%
select(KILOS) %>%
summarise(
value = mean(KILOS, na.rm = TRUE))
TOTO1<-as.data.frame(TOTO)
REGION_G1<-as.data.frame(REGION_G)
TOTO1$Region_G<-as.character(TOTO1$REGION)
REGION_G1$Region_G<-as.character(REGION_G1$Region_G)
TOTO2<-left_join(REGION_G1,TOTO1,by="Region_G")
TOTO3<-TOTO2[,c(3:5)]
MEXICO_0<-df_mxstate
MEXICO<-full_join(MEXICO_0,TOTO3)
MEXICO$value[is.na(MEXICO$value)] <- 0
View(MEXICO)
str(MEXICO)
View(MEXICO)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(REGION_G)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
MESES
runApp()
library(readr)
REGION_G <- read_delim("~/Dropbox/ESTADISTICA/MEXICO/PROCESAMIENTO/REGION_G.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(REGION_G)
runApp()
save.image("~/Documentos/CARPETA VALENTIN/ASESORIAS/GIACINTI/2016/ANALYTICS/MEXICO ANALITIC/MEXICO/MEXICO.RData")
mxstate_choropleth
library(shiny)
library(shinydashboard)
library(FactoMineR)
library(lme4)
library(matrixcalc)
library(cluster)
library(tidyr)
library(dplyr)
library(networkD3)
library(DT)
library(d3Network)
library(RCurl)
library(leaflet)
library(highcharter)
library(dendextend)
library(circlize)
library(ggfortify)
library(d3heatmap)
library(ggplot2)
library(ggdendro)
library(plotly)
library(googleVis)
#library(htmltools)
#library(exportwidget)
#library(webshot)
#library(highcharter)
library(data.table)
library(lubridate)
library(mxmaps)
library(scales) # needed for comma
library(viridis)
mxstate_choropleth
MXStateChoropleth
df_mxstate$value <- df_mxstate$afromexican / df_mxstate$pop
pal <- colorNumeric("Blues", domain = df_mxstate$value)
mxstate_leaflet(df_mxstate,
pal,
~ pal(value),
~ sprintf("State: %s<br/>Value: %s",
state_name, comma(value)),
zoom = c("09", "10")) %>%
addLegend(position = "bottomright", pal = pal, values = df_mxstate$value) %>%
addProviderTiles("CartoDB.Positron")
df_mxstate$value <- df_mxstate$afromexican / df_mxstate$pop
pal <- colorNumeric("Blues", domain = df_mxstate$value)
mxstate_leaflet(df_mxstate,
pal,
~ pal(value),
~ sprintf("State: %s<br/>Value: %s",
state_name, comma(value)),
zoom = c("09", "10")) %>%
addLegend(position = "bottomright", pal = pal, values = df_mxstate$value) %>%
addProviderTiles("CartoDB.Positron")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp('NUEVO')
runApp()
c(1;1)
c("1";"1")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
install.packages("ensembleR", dependencies = c("Imports", "Suggests"))
library("ensembleR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library(ensembleR)
preds<-ensemble(iris[1:125,],iris[126:150,],'Species',c('rpart','treebag','gbm','knn','svmLinear'),'rf')
library(ensembleR)
preds<-ensemble(iris[1:125,],iris[126:150,],'Species',c('rpart','treebag','gbm','knn','svmLinear'),'rf')
table(preds)
plot(preds)
plot(preds)
install.packages("hts")
shiny::runApp()
library(shiny)
library(shinydashboard)
library(FactoMineR)
library(lme4)
library(matrixcalc)
library(cluster)
library(tidyr)
library(dplyr)
library(networkD3)
library(DT)
library(d3Network)
library(RCurl)
library(leaflet)
library(highcharter)
library(dendextend)
library(circlize)
library(ggfortify)
library(d3heatmap)
library(ggplot2)
library(ggdendro)
library(plotly)
library(googleVis)
#library(htmltools)
#library(exportwidget)
#library(webshot)
#library(highcharter)
library(data.table)
library(lubridate)
library(mxmaps)
library(scales) # needed for comma
library(viridis)
TEMPORADA_1
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
install.packages("highcharter")
library(shiny)
library(shinydashboard)
library(FactoMineR)
library(lme4)
library(matrixcalc)
library(cluster)
library(tidyr)
library(dplyr)
library(networkD3)
library(DT)
library(d3Network)
library(RCurl)
library(leaflet)
library(highcharter)
library(dendextend)
library(circlize)
library(ggfortify)
library(d3heatmap)
library(ggplot2)
library(ggdendro)
library(plotly)
library(googleVis)
#library(htmltools)
#library(exportwidget)
#library(webshot)
#library(highcharter)
library(lubridate)
library(mxmaps)
library(scales) # needed for comma
library(viridis)
install.packages("circlize")
install.packages("ggfortify")
install.packages("mxmaps")
library(shiny)
library(shinydashboard)
library(FactoMineR)
library(lme4)
library(matrixcalc)
library(cluster)
library(tidyr)
library(dplyr)
library(networkD3)
library(DT)
library(d3Network)
library(RCurl)
library(leaflet)
library(highcharter)
library(dendextend)
library(circlize)
library(ggfortify)
library(d3heatmap)
library(ggplot2)
library(ggdendro)
library(plotly)
library(googleVis)
#library(htmltools)
#library(exportwidget)
#library(webshot)
#library(highcharter)
library(lubridate)
library(mxmaps)
library(scales) # needed for comma
library(viridis)
install.packages("ggdendro")
install.packages("googleVis")
install.packages("mxmaps")
runApp()
install.packages("plotly")
runApp()
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github('diegovalle/mxmaps')
install.packages("RgoogleMaps")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github('diegovalle/mxmaps')
install.packages("WDI")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github('diegovalle/mxmaps')
install.packages("acs")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github('diegovalle/mxmaps')
install.packages("ggmap")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github('diegovalle/mxmaps')
install.packages("maps")
if (!require(devtools)) {
install.packages("devtools")
}
devtools::install_github('diegovalle/mxmaps')
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
